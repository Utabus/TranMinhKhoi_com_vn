@model TranMinhKhoi_com_vn.Entities.Blog

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<h1 class="mb-4 text-center">Chỉnh sửa bài viết</h1>
<div class="row justify-content-center">
    <div class="col-lg-12 col-md-12">
        <div class="card shadow-sm">
            <div class="card-body">
                <h4 class="card-title mb-3">Thông tin bài viết</h4>
                <form asp-action="Edit" method="post" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="Status" />
                    <div class="mb-3">
                        <label asp-for="Title" class="form-label fw-bold"></label>
                        <input asp-for="Title" class="form-control" required />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    <div class="mb-3 text-center">
                        <div id="image-preview" class="mb-2">
                            <img id="output" src="@Url.Content("~/contents/Images/Blog/" + @Model.Image)" alt="Avatar Preview" class="rounded-circle border" style="width: 120px; height: 120px; object-fit: cover; @(string.IsNullOrEmpty(Model.Image) ? "display:none;" : "")">
                        </div>
                        <label asp-for="Image" class="form-label fw-bold">Ảnh đại diện</label>
                        <input type="file" name="fAvatar" asp-for="Image" class="form-control" accept="image/*" onchange="loadFile(event)" />
                        <span asp-validation-for="Image" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Description" class="form-label fw-bold"></label>
                        <input asp-for="Description" class="form-control" required />
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Content" class="form-label fw-bold"></label>
                        <textarea asp-for="Content" id="htmlelementid" style="max-width:auto" class="form-control"></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Cdt" class="form-label fw-bold"></label>
                        <input asp-for="Cdt" class="form-control" required />
                        <span asp-validation-for="Cdt" class="text-danger"></span>
                    </div>
                    @if (Model.Type == "Politics" || Model.Type == "Competion" || Model.Type == "Blog" || Model.Type == "Social")
                    {
                        <div class="mb-3">
                            <label asp-for="Type" class="form-label fw-bold"></label>
                            <select asp-for="Type" class="form-select" required>
                                <option value="Social"> Social </option>
                                <option value="Politics"> Politics </option>
                                <option value="Competion"> Competion </option>
                                <option value="Blog"> Blog </option>
                            </select>
                            <span asp-validation-for="Type" class="text-danger"></span>
                        </div>
                    }else
                    {
                        <input type="hidden" asp-for="Type" value="@Model.Type" />
                    }
               
                 

                    <div class="d-flex justify-content-between align-items-center mt-4">
                        <a asp-action="Index" class="btn btn-secondary"><i class="bi bi-arrow-left"></i> Quay lại</a>
                        <button type="submit" class="btn btn-primary"><i class="bi bi-save"></i> Lưu thay đổi</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        var loadFile = function (event) {
            var image = document.getElementById("output");
            image.src = URL.createObjectURL(event.target.files[0]);
            image.style.display = 'block';
        };
        (function (factory) {
            if (typeof define === 'function' && define.amd) {
                define(['jquery'], factory);
            }
            else if (typeof module === 'object' && module.exports) {
                module.exports = factory(require('jquery'));
            } else {
                factory(window.jQuery);
            }
        }(function ($) {
            $.extend($.summernote.plugins, {
                // Tạo plugin tên elfinder
                'elfinder': function (context) {
                    var self = this;
                    // ui has renders to build ui elements.
                    var ui = $.summernote.ui;
                    // Tạo nút bấm
                    context.memo('button.elfinder', function () {
                        var button = ui.button({
                            contents: '<i class="note-icon-picture"/> elFinder',
                            tooltip: 'Quản lý file',
                            click: function () {
                                // Bấm vào nút bấm gọi hàm elfinderDialog
                                elfinderDialog(context);
                            }
                        });
                        // create jQuery object from button instance.
                        var $elfinder = button.render();
                        return $elfinder;
                    });
                    // This methods will be called when editor is destroyed by $('..').summernote('destroy');
                    // You should remove elements on `initialize`.
                    this.destroy = function () {
                        this.$panel.remove();
                        this.$panel = null;
                    };
                }

            });
        }));
        function elfinderDialog(editor) {
            var fm = $('<div/>').dialogelfinder({
                baseUrl: "@Url.Content("~/lib/elfinder/")",
                url: "@Url.Action("Connector", "HinhAnh", new { Area = "Admin" })",
                lang: 'vi',
                width: 840,
                height: 450,
                destroyOnClose: true,
                getFileCallback: function (files, fm) {
                    console.log(files);
                    editor.invoke('editor.insertImage', files.url);
                },
                commandsOptions: {
                    getfile: {
                        oncomplete: 'close',
                        folders: false
                    }
                }
            }).dialogelfinder('instance');
        }
        $(document).ready(function () {
            $('#htmlelementid').summernote({
                height: 700,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'underline', 'clear']],
                    ['fontsize', ['fontsize']],
                    ['fontname', ['fontname']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['table', ['table']],
                    ['insert', ['link', 'picture', 'video', 'elfinder']],
                    ['view', ['fullscreen', 'codeview', 'help']],
                ],
            });
        });
    </script>
}
